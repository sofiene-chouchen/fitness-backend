{"version":3,"sources":["../stubs/main.ts","../configure.ts","../src/define_config.ts"],"sourcesContent":["/*\n * @adonisjs/i18n\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { getDirname } from '@poppinss/utils'\nexport const stubsRoot = getDirname(import.meta.url)\n","/*\n * @adonisjs/i18n\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type Configure from '@adonisjs/core/commands/configure'\nimport { stubsRoot } from './stubs/main.js'\n\n/**\n * Configures the package\n */\nexport async function configure(command: Configure) {\n  const codemods = await command.createCodemods()\n\n  /**\n   * Publish config file\n   */\n  await codemods.makeUsingStub(stubsRoot, 'config/i18n.stub', {})\n\n  /**\n   * Publish middleware file\n   */\n  await codemods.makeUsingStub(stubsRoot, 'make/middleware/detect_user_locale.stub', {\n    entity: command.app.generators.createEntity('detect_user_locale'),\n  })\n\n  /**\n   * Register middleware\n   */\n  await codemods.registerMiddleware('router', [\n    {\n      path: '#middleware/detect_user_locale_middleware',\n    },\n  ])\n\n  /**\n   * Register provider\n   */\n  await codemods.updateRcFile((rcFile) => {\n    rcFile.addProvider('@adonisjs/i18n/i18n_provider')\n    rcFile.addMetaFile('resources/lang/**/*.{json,yaml,yml}', false)\n  })\n}\n","/*\n * @adonisjs/i18n\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { configProvider } from '@adonisjs/core'\nimport { RuntimeException } from '@poppinss/utils'\nimport type { ConfigProvider } from '@adonisjs/core/types'\n\nimport type {\n  LoaderFactory,\n  BaseI18nConfig,\n  FormatterFactory,\n  I18nManagerConfig,\n  FsLoaderOptions,\n} from './types.js'\n\n/**\n * Config helper to define i18n config\n */\nexport function defineConfig(\n  config: Partial<BaseI18nConfig> & {\n    formatter: FormatterFactory | ConfigProvider<FormatterFactory>\n    loaders: (ConfigProvider<LoaderFactory> | LoaderFactory)[]\n  }\n): ConfigProvider<I18nManagerConfig> {\n  if (!config.formatter) {\n    throw new RuntimeException('Cannot configure i18n manager. Missing property \"formatter\"')\n  }\n\n  const { formatter, loaders, ...rest } = config\n\n  return configProvider.create(async (app) => {\n    /**\n     * Resolving formatter\n     */\n    const resolvedFormatter =\n      typeof formatter === 'function' ? formatter : await formatter.resolver(app)\n\n    /**\n     * Resolving loaders. Each loader can be a factory or a\n     * config provider.\n     */\n    const resolvedLoaders = await Promise.all(\n      loaders.map((loader) => {\n        return typeof loader === 'function' ? loader : loader.resolver(app)\n      })\n    )\n\n    return {\n      defaultLocale: 'en',\n      formatter: resolvedFormatter,\n      loaders: resolvedLoaders,\n      ...rest,\n    } satisfies I18nManagerConfig\n  })\n}\n\n/**\n * Config helper to configure a formatter for i18n\n */\nexport const formatters: {\n  icu: () => ConfigProvider<FormatterFactory>\n} = {\n  icu() {\n    return configProvider.create(async () => {\n      const { IcuFormatter } = await import('../src/messages_formatters/icu.js')\n      return () => new IcuFormatter()\n    })\n  },\n}\n\n/**\n * Config helper to configure loaders for i18n\n */\nexport const loaders: {\n  fs: (config: FsLoaderOptions) => ConfigProvider<LoaderFactory>\n} = {\n  fs(config) {\n    return configProvider.create(async () => {\n      const { FsLoader } = await import('../src/loaders/fs.js')\n      return () => new FsLoader(config)\n    })\n  },\n}\n"],"mappings":";;;;;;;AASA,SAAS,kBAAkB;AACpB,IAAM,YAAY,WAAW,YAAY,GAAG;;;ACKnD,eAAsB,UAAU,SAAoB;AAClD,QAAM,WAAW,MAAM,QAAQ,eAAe;AAK9C,QAAM,SAAS,cAAc,WAAW,oBAAoB,CAAC,CAAC;AAK9D,QAAM,SAAS,cAAc,WAAW,2CAA2C;AAAA,IACjF,QAAQ,QAAQ,IAAI,WAAW,aAAa,oBAAoB;AAAA,EAClE,CAAC;AAKD,QAAM,SAAS,mBAAmB,UAAU;AAAA,IAC1C;AAAA,MACE,MAAM;AAAA,IACR;AAAA,EACF,CAAC;AAKD,QAAM,SAAS,aAAa,CAAC,WAAW;AACtC,WAAO,YAAY,8BAA8B;AACjD,WAAO,YAAY,uCAAuC,KAAK;AAAA,EACjE,CAAC;AACH;;;ACrCA,SAAS,sBAAsB;AAC/B,SAAS,wBAAwB;AAc1B,SAAS,aACd,QAImC;AACnC,MAAI,CAAC,OAAO,WAAW;AACrB,UAAM,IAAI,iBAAiB,6DAA6D;AAAA,EAC1F;AAEA,QAAM,EAAE,WAAW,SAAAA,UAAS,GAAG,KAAK,IAAI;AAExC,SAAO,eAAe,OAAO,OAAO,QAAQ;AAI1C,UAAM,oBACJ,OAAO,cAAc,aAAa,YAAY,MAAM,UAAU,SAAS,GAAG;AAM5E,UAAM,kBAAkB,MAAM,QAAQ;AAAA,MACpCA,SAAQ,IAAI,CAAC,WAAW;AACtB,eAAO,OAAO,WAAW,aAAa,SAAS,OAAO,SAAS,GAAG;AAAA,MACpE,CAAC;AAAA,IACH;AAEA,WAAO;AAAA,MACL,eAAe;AAAA,MACf,WAAW;AAAA,MACX,SAAS;AAAA,MACT,GAAG;AAAA,IACL;AAAA,EACF,CAAC;AACH;AAKO,IAAM,aAET;AAAA,EACF,MAAM;AACJ,WAAO,eAAe,OAAO,YAAY;AACvC,YAAM,EAAE,aAAa,IAAI,MAAM,OAAO,mBAAmC;AACzE,aAAO,MAAM,IAAI,aAAa;AAAA,IAChC,CAAC;AAAA,EACH;AACF;AAKO,IAAM,UAET;AAAA,EACF,GAAG,QAAQ;AACT,WAAO,eAAe,OAAO,YAAY;AACvC,YAAM,EAAE,SAAS,IAAI,MAAM,OAAO,kBAAsB;AACxD,aAAO,MAAM,IAAI,SAAS,MAAM;AAAA,IAClC,CAAC;AAAA,EACH;AACF;","names":["loaders"]}