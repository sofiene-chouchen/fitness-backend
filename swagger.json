{
  "openapi": "3.0.0",
  "info": {
    "title": "Fitness",
    "version": "1.0.0",
    "description": ""
  },
  "components": {
    "responses": {
      "Forbidden": {
        "description": "Access token is missing or invalid"
      },
      "Accepted": {
        "description": "The request was accepted"
      },
      "Created": {
        "description": "The resource has been created"
      },
      "NotFound": {
        "description": "The resource has been created"
      },
      "NotAcceptable": {
        "description": "The resource has been created"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    },
    "schemas": {
      "Any": {
        "description": "Any JSON object not defined as schema"
      },
      "PaginationMeta": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "example": 100,
            "nullable": false
          },
          "page": {
            "type": "number",
            "example": 2,
            "nullable": false
          },
          "perPage": {
            "type": "number",
            "example": 10,
            "nullable": false
          },
          "currentPage": {
            "type": "number",
            "example": 3,
            "nullable": false
          },
          "lastPage": {
            "type": "number",
            "example": 10,
            "nullable": false
          },
          "firstPage": {
            "type": "number",
            "example": 1,
            "nullable": false
          },
          "lastPageUrl": {
            "type": "string",
            "example": "/?page=10",
            "nullable": false
          },
          "firstPageUrl": {
            "type": "string",
            "example": "/?page=1",
            "nullable": false
          },
          "nextPageUrl": {
            "type": "string",
            "example": "/?page=6",
            "nullable": false
          },
          "previousPageUrl": {
            "type": "string",
            "example": "/?page=5",
            "nullable": false
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "nullable": false,
            "example": true
          }
        },
        "description": "SuccessResponse (Interface)"
      },
      "TokenUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "User",
            "nullable": false,
            "$ref": "#/components/schemas/User",
            "example": null
          },
          "token": {
            "type": "AccessTokenResponse",
            "nullable": false,
            "$ref": "#/components/schemas/AccessTokenResponse",
            "example": null
          }
        },
        "description": "TokenUserResponse (Interface)"
      },
      "AccessTokenResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": false,
            "example": "Lorem Ipsum"
          },
          "token": {
            "type": "string",
            "nullable": true,
            "example": "Lorem Ipsum"
          },
          "lastUsedAt": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2021-03-23T16:13:08.489+01:00"
          },
          "expiresAt": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2021-03-23T16:13:08.489+01:00"
          }
        },
        "description": "AccessTokenResponse (Interface)"
      },
      "User": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 899
          },
          "full_name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "johndoe@example.com",
            "format": "email"
          },
          "created_at": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          }
        },
        "description": "User (Model)"
      },
      "loginValidator": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "password": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true,
            "minLength": 8
          }
        },
        "example": {
          "email": "Lorem Ipsum",
          "password": "Lorem Ipsum"
        },
        "description": "loginValidator (Validator)"
      },
      "registerValidator": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "email": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "password": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true,
            "minLength": 8
          }
        },
        "example": {
          "fullName": "Lorem Ipsum",
          "email": "Lorem Ipsum",
          "password": "Lorem Ipsum"
        },
        "description": "registerValidator (Validator)"
      }
    }
  },
  "paths": {
    "/public/health": {
      "get": {
        "summary": " (health)",
        "description": "Check app health\n\n _app/controllers/app_controller.ts_ - **health**",
        "parameters": [],
        "tags": [
          "PUBLIC"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": []
      }
    },
    "/auth/register": {
      "post": {
        "summary": " (register)",
        "description": "Register\n\n _app/controllers/auth_controller.ts_ - **register**",
        "parameters": [],
        "tags": [
          "AUTH"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                },
                "example": {
                  "type": "Lorem Ipsum",
                  "token": "Lorem Ipsum",
                  "lastUsedAt": "2021-03-23T16:13:08.489+01:00",
                  "expiresAt": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          }
        },
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registerValidator"
              },
              "example": {
                "fullName": "Lorem Ipsum",
                "email": "Lorem Ipsum",
                "password": "Lorem Ipsum"
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": " (login)",
        "description": "Login\n\n _app/controllers/auth_controller.ts_ - **login**",
        "parameters": [],
        "tags": [
          "AUTH"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                },
                "example": {
                  "type": "Lorem Ipsum",
                  "token": "Lorem Ipsum",
                  "lastUsedAt": "2021-03-23T16:13:08.489+01:00",
                  "expiresAt": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          }
        },
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginValidator"
              },
              "example": {
                "email": "Lorem Ipsum",
                "password": "Lorem Ipsum"
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "delete": {
        "summary": " (logout)",
        "description": "Logout\n\n _app/controllers/auth_controller.ts_ - **logout**",
        "parameters": [],
        "tags": [
          "AUTH"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      }
    },
    "/auth/me": {
      "get": {
        "summary": " (me)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/auth_controller.ts_ - **me**",
        "parameters": [],
        "tags": [
          "AUTH"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id": 899,
                  "full_name": "John Doe",
                  "email": "johndoe@example.com",
                  "created_at": "2021-03-23T16:13:08.489+01:00",
                  "updated_at": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "PUBLIC",
      "description": "Everything related to PUBLIC"
    },
    {
      "name": "AUTH",
      "description": "Everything related to AUTH"
    }
  ]
}